/*
 * run_device.c
 *
 *  Created on: Nov 16, 2024
 *      Author: User
 */

#include "main.h"
#include "../Inc/run_device.h"
#include "../Inc/switch_network.h"
#include "../Inc/device_registers.h"

extern ADC_HandleTypeDef hadc1;

extern UART_HandleTypeDef huart1;

extern PCD_HandleTypeDef hpcd_USB_OTG_FS;

extern SPI_HandleTypeDef hspi1;

RegisterMap_TypeDef device_registers;

uint8_t spiTxBuffer[] = {};  // 4 bytes for 32-bit data

void run_device(){
	init_register_map(&device_registers);
	while(1){







//        if (HAL_UART_Receive(&huart1, uartRxBuffer, 4, HAL_MAX_DELAY) == HAL_OK) {
//            // Combine the received bytes into a 32-bit variable
//            uint32_t receivedData = (uartRxBuffer[3] << 24) |
//                                    (uartRxBuffer[2] << 16) |
//                                    (uartRxBuffer[1] << 8)  |
//                                     uartRxBuffer[0];
//
//            // Parse the received data
//            uint8_t address = (receivedData >> 24) & 0xFF; // Upper 8 bits
//			uint32_t data = receivedData & 0xFFFFFF;       // Lower 24 bits
//
//			device_registers.RegisterArray[address].RegData = data;
//        }
	}
}
