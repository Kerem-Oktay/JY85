/*
 * run_device.c
 *
 *  Created on: Nov 16, 2024
 *      Author: User
 */

#include "device_constants.h"
#include "main.h"
#include "run_device.h"
#include "switch_network.h"
#include "device_registers.h"
#include "measurement_routines.h"

extern TIM_HandleTypeDef htim8;
extern DMA_HandleTypeDef handle_GPDMA1_Channel12;

extern uint16_t adc_samples_1[DVC_MAX_NUM_ADC_SAMPLES];
extern uint16_t adc_samples_2[DVC_MAX_NUM_ADC_SAMPLES];
extern uint16_t adc_samples_3[DVC_MAX_NUM_ADC_SAMPLES];

extern uint8_t i2c_tx_buf_dds_1_pot[];
extern uint8_t i2c_tx_buf_dds_2_pot[];
extern uint8_t i2c_tx_buf_curr_mrr_pot[];

extern uint8_t spi_tx_buf_dds_1_freq[];
extern uint8_t spi_tx_buf_dds_2_freq[];

RegisterMap_TypeDef device_registers;
SwitchNetwork_TypeDef device_switch_network;

void run_device(){
	MeasurementCfg_Type measurement_type = 0;

	init_register_map(&device_registers);
	init_switch_network(&device_switch_network);
	clear_switch_network(&device_switch_network);
//	HAL_Delay(100);
//	TIM8->ARR = 32-1;
//	HAL_TIM_OC_Start(&htim8, TIM_CHANNEL_1);
//	TIM8->DIER = TIM_DIER_UDE;
	while(1){
//		if(get_register(&device_registers,0)%2){
//			HAL_DMA_Start(&handle_GPDMA1_Channel12,(uint32_t)&GPIOE->IDR,(uint32_t)&dmaValCheck,500*sizeof(uint16_t));
//			HAL_Delay(100);
//			set_register(&device_registers,0,get_register(&device_registers,0)&(~(1)));
//			for(int i = 0; i < 500; i++){
//				CDC_Transmit_FS(&dmaValCheck[i],sizeof(dmaValCheck[i]));
//				HAL_Delay(100);
//			}
//		}
		measurement_type = (get_register(&device_registers,DVC_MEASUREMENT_CONFIG)>>6) & 0xF;

	    switch (measurement_type) {
	        case DC_RESISTANCE:
	        	dvc_exec_msr_dc_resistance_2p();
	            break;
	        case CURRENT_VOLTAGE:
	        	dvc_exec_msr_current_voltage();
	            break;
	        case CAPACITANCE_VOLTAGE_2P:
	        	dvc_exec_msr_capacitance_voltage_2p();
	            break;
	        case IMPEDANCE_SPECTROSCOPY_2P:
	        	dvc_exec_msr_impedance_spectroscopy_2p();
	            break;
	        case TRANSFER_CHARACTERISTICS:
	        	dvc_exec_msr_transfer_characteristics();
	            break;
	        case OUTPUT_CHARACTERISTICS:
	        	dvc_exec_msr_output_characteristics();
	            break;
	        case CAPACITANCE_VOLTAGE_3P:
	        	dvc_exec_msr_capacitance_voltage_3p();
	            break;
	        case ELECTROCHEMICAL:
	        	dvc_exec_msr_electrochemical();
	            break;
	        case LOW_RESISTANCE:
	        	dvc_exec_msr_low_resistance();
	            break;
	        case PROBE_RESISTANCE:
	        	dvc_exec_msr_dc_resistance_4p();
	            break;
	        case IMPEDANCE_SPECTROSCOPY_4P:
	        	dvc_exec_msr_impedance_spectroscopy_4p();
	            break;
	        default:
	            break;
	    }
	}
}
