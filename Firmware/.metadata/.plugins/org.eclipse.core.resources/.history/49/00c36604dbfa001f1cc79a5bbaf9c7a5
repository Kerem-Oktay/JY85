/*
 * device_monitoring.c
 *
 *  Created on: Mar 6, 2025
 *      Author: User
 */

#include "main.h"

void set_adc_sampling_freq(uint32_t sample_freq){
	uint32_t sample_freq_div;
	sample_freq_div = 160000000UL / sample_freq;
	TIM8->ARR = sample_freq_div-1;
	TIM8->CCR1 = TIM8->ARR/2;
	TIM8->CCR2 = TIM8->ARR/2;
}

HAL_StatusTypeDef collect_adc_samples(DMA_HandleTypeDef *dma_ptr, uint8_t adc_num, uint16_t *sample_buf){
	HAL_StatusTypeDef result;
    HAL_DMA_Abort(dma_ptr);
	if(adc_num == 1){
		result = HAL_DMA_Start(dma_ptr,(uint32_t)&GPIOE->IDR,(uint32_t)sample_buf,DVC_MAX_NUM_ADC_SAMPLES*sizeof(uint16_t));
	}
	else if(adc_num == 2){
		result = HAL_DMA_Start(dma_ptr,(uint32_t)&GPIOF->IDR,(uint32_t)sample_buf,DVC_MAX_NUM_ADC_SAMPLES*sizeof(uint16_t));
	}
	else if(adc_num == 3){
		result = HAL_ERROR;
	}
    if(result == HAL_OK) {
        // Wait for DMA transfer to finish or use an interrupt for completion (e.g., via DMA interrupt)
        // Once done, stop the DMA
        HAL_DMA_Abort(dma_ptr);  // Stop DMA after collection is finished
    }
	return result;
}

